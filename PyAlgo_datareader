#pandas-datareader
#https://github.com/pydata/pandas-datareader
#pip install pandas-datareader
#import pandas.io.data as web # not in use
#Necessary Imports
import numpy as np  # array operations
import pandas as pd  # time series management
import pandas_datareader.data as web
#from pandas_datareader import data as web  # data retrieval
# source activate PyAlgo
#python /home/octo/Desktop/QTPY/qt.py
#pip install seaborn
import seaborn as sns
sns.set()  # nicer plotting style
import datetime
# put all plots in the notebook itself
#%matplotlib inline
import matplotlib.pyplot as plt
#Retrieving Stock Price Data
def import_yahoo():
    #df=pd.read_csv("***.csv")
    start = datetime.datetime(2010, 1, 1)
    end = datetime.datetime(2015, 5, 9)
    TQQQa=web.DataReader('TQQQ', 'yahoo-actions', start, end)
    #TQQQp= web.DataReader('TQQQ', data_source='yahoo')#full data set
    TQQQp = web.DataReader('TQQQ', 'yahoo', start, end)
    #TQQQd = web.DataReader('TQQQ', 'yahoo-dividends', start, end)
    #DAX.info()
    #DAX.tail()
    #DAX['Close'].plot(figsize=(8,5))
    print TQQQa.tail()
    print TQQQp['Adj Close'].tail()
    #print TQQQp.ix['2014-01-04']
    #%time
    TQQQp['Return'] = np.log(TQQQp['Close']/TQQQp['Close'].shift(1))
    #another method to get return using shift(1)
    TQQQp[['Close','Return']].tail()
    #del DAX['Ret_Loop']# one return column is to delete
    TQQQp[['Close','Return']].plot(subplots=True,style='b',figsize=(8,5))
    #TQQQp['Adj Close'].plot()
    #TQQQp['Return'].plot()
    plt.show()

if __name__ == '__main__':
    #main()
    import_yahoo()
*****IMPROVEMENT
#pandas-datareader
#https://github.com/pydata/pandas-datareader
#pip install pandas-datareader
#import pandas.io.data as web # not in use
#Necessary Imports
import numpy as np  # array operations
import pandas as pd  # time series management
import pandas_datareader.data as web
#from pandas_datareader import data as web  # data retrieval
# source activate PyAlgo
#python /home/octo/Desktop/QTPY/qt.py
#pip install seaborn
import seaborn as sns
sns.set()  # nicer plotting style
import datetime
# put all plots in the notebook itself
#%matplotlib inline
import matplotlib.pyplot as plt
#Retrieving Stock Price Data
def import_yahoo(symbol):
    #df=pd.read_csv("***.csv")
    start = datetime.datetime(2010, 1, 1)
    end = datetime.datetime(2015, 5, 9)
    STa=web.DataReader(format(symbol), 'yahoo-actions', start, end)
    #TQQQp= web.DataReader('TQQQ', data_source='yahoo')#full data set
    STp = web.DataReader(format(symbol), 'yahoo', start, end)
    #TQQQd = web.DataReader('TQQQ', 'yahoo-dividends', start, end)
    #return STa[5:7]#rows between 5 and 6 sp only 1 not 2
    #return STa.tail()
    #return STp['Adj Close'].tail()
    #return STa.tail(),STp['Close'].max(),STp['Volume'].mean(),# set return at end after plot then plot will be visible and cross out max value visisble
    #http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html
    #http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.head.html
    #http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.tail.html
    #print STp.ix['2014-01-04']
    #%time
    STp['Return'] = np.log(STp['Close']/STp['Close'].shift(1))
    STp[['Close','Return']].tail()
    #del STp['Open']# one return column is to delete
    STp[['Close','High','Return']].plot(subplots=True,style='b',figsize=(8,5))
#http://matplotlib.org/users/pyplot_tutorial.html#working-with-text
    #TQQQp['Adj Close'].plot()
    #TQQQp['Return'].plot(figsize=(8,5))
    plt.show()
    return STa.tail(),STp['Close'].max(),STp['Volume'].mean(),# set return at end after plot then plot will be visible and cross out max value visisble

def data_analysis():
    for symbol in ['TQQQ','SQQQ','UWTI','DWTI','UPRO','SPXU','SPXS']:
        print "max value and mean value"
        print symbol,import_yahoo(symbol)

if __name__ == '__main__':
    #main()
    #import_yahoo()
    data_analysis()

