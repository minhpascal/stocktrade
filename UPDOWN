#***
library("quantmod")
library("rpart")
library("rpart.plot")
library("caTools")
library("caret")
library("kernlab")
library("nnet")
library("foreign")
library("ggplot2")
library("reshape2")
library("PerformanceAnalytics")
library("car")
library("FinTS")
library("fGarch")
library("robustbase")
library("MASS")
library("klaR")
library("lubridate")#Makes it easier to work with the dates
library("e1071")
library("parallel")
library("DMwR")
library("randomForest")
library(‘depmixS4’)
#***
getSymbols(c("^GSPC",'^NDX','^OEX','^VIX','UWTI','DWTI','SQQQ','TQQQ','XLE','XLF','XLV','XLY','XLI','TLT','SST','EEM','CAD=X'))
***
F1: PRICE-VOLUME convergence or divergence ??
#Price and Volume change
q3<-na.omit(ROC(Cl(NDX)))
q2<-na.omit(Vo(NDX))
q1<-na.omit(Cl(NDX))
q4<-na.omit(ROC(Vo(NDX)))
rolling_quantile_CL<-rollapply(q1,width=50,FUN=function(y) quantile(y,c(0.01,0.05,0.15,0.25,0.35,0.45,0.55,0.65,0.75,0.85,0.95,0.99)),by.column = FALSE, align = "right")
rolling_quantile_VO<-rollapply(q2,width=50,FUN=function(y) quantile(y,c(0.01,0.05,0.15,0.25,0.35,0.45,0.55,0.65,0.75,0.85,0.95,0.99)),by.column = FALSE, align = "right")
rolling_quantile_CLR<-rollapply(q3,width=50,FUN=function(y) quantile(y,c(0.01,0.05,0.15,0.25,0.35,0.45,0.55,0.65,0.75,0.85,0.95,0.99)),by.column = FALSE, align = "right")
rolling_quantile_VOLR<-rollapply(q4,width=50,FUN=function(y) quantile(y,c(0.01,0.05,0.15,0.25,0.35,0.45,0.55,0.65,0.75,0.85,0.95,0.99)),by.column = FALSE, align = "right")
PU<-ifelse(ROC(Cl(NDX))>=0.0258,5,ifelse(ROC(Cl(NDX))>=0.021 & ROC(Cl(NDX))<0.0258,4,ifelse(ROC(Cl(NDX))>=0.012 & ROC(Cl(NDX))<0.021,3,ifelse(ROC(Cl(NDX))>=0.007 & ROC(Cl(NDX))<0.012,2,ifelse(ROC(Cl(NDX))>=0.002 & ROC(Cl(NDX))<0.007,1,0)))))
PD<-ifelse(ROC(Cl(NDX))<=(-0.0335),-5,ifelse(ROC(Cl(NDX))<=(-0.027) & ROC(Cl(NDX))>(-0.0335),-4,ifelse(ROC(Cl(NDX))<=(-0.014) & ROC(Cl(NDX))>(-0.027),-3,ifelse(ROC(Cl(NDX))<=(-0.005) & ROC(Cl(NDX))>(-0.014),-2,ifelse(ROC(Cl(NDX))<=(-0.0012) & ROC(Cl(NDX))>(-0.005),-1,0)))))
PCUD<-ifelse(ROC(Cl(NDX))>0,PU,PD)
VU<-ifelse(ROC(Vo(NDX))>=0.021,5,ifelse(ROC(Cl(NDX))>=0.01 & ROC(Cl(NDX))<0.02,4,ifelse(ROC(Cl(NDX))>=0.004 & ROC(Cl(NDX))<0.0075,2,ifelse(ROC(Cl(NDX))>=0.002 & ROC(Cl(NDX))<0.004,1,0))))
VD<-ifelse(ROC(Cl(NDX))<=(-0.028),-5,ifelse(ROC(Cl(NDX))<=(-0.016) & ROC(Cl(NDX))>(-0.028),-4,ifelse(ROC(Cl(NDX))<=(-0.01) & ROC(Cl(NDX))>(-0.016),-3,ifelse(ROC(Cl(NDX))<=(-0.005) & ROC(Cl(NDX))>(-0.01),-2,ifelse(ROC(Cl(NDX))<=(-0.0015) & ROC(Cl(NDX))>(-0.05),1,0)))))
VCUD<-ifelse(ROC(Cl(NDX))>0,VU,VD)
##Price and Volume
PL<-ifelse(Cl(NDX)>=rolling_quantile_CL$X1. & Cl(NDX)<rolling_quantile_CL$X5.,1,ifelse(Cl(NDX)>rolling_quantile_CL$X5. & Cl(NDX)<rolling_quantile_CL$X15.,2,ifelse(Cl(NDX)>=rolling_quantile_CL$X15. & Cl(NDX)<rolling_quantile_CL$X25.,3,ifelse(Cl(NDX)>=rolling_quantile_CL$X25. & Cl(NDX)<rolling_quantile_CL$X35.,4,ifelse(Cl(NDX)>=rolling_quantile_CL$X35. & Cl(NDX)<rolling_quantile_CL$X45.,5,ifelse(Cl(NDX)>=rolling_quantile_CL$X45. & Cl(NDX)<rolling_quantile_CL$X55.,6,ifelse(Cl(NDX)>=rolling_quantile_CL$X55. & Cl(NDX)<rolling_quantile_CL$X65.,7,ifelse(Cl(NDX)>=rolling_quantile_CL$X65. & Cl(NDX)<rolling_quantile_CL$X75.,8,ifelse(Cl(NDX)>=rolling_quantile_CL$X75. & Cl(NDX)<rolling_quantile_CL$X85.,9,ifelse(Cl(NDX)>=rolling_quantile_CL$X85. & Cl(NDX)<rolling_quantile_CL$X95.,10,ifelse(Cl(NDX)>=rolling_quantile_CL$X95. & Cl(NDX)<rolling_quantile_CL$X99.,11,ifelse(Cl(NDX)>=rolling_quantile_CL$X99.,12,0))))))))))))
VL<-ifelse(Vo(NDX)>=rolling_quantile_VO$X1. & Vo(NDX)<rolling_quantile_VO$X5.,1,ifelse(Vo(NDX)>rolling_quantile_VO$X5. & Vo(NDX)<rolling_quantile_VO$X15.,2,ifelse(Vo(NDX)>=rolling_quantile_VO$X15. & Vo(NDX)<rolling_quantile_VO$X25.,3,ifelse(Vo(NDX)>=rolling_quantile_VO$X25. & Vo(NDX)<rolling_quantile_VO$X35.,4,ifelse(Vo(NDX)>=rolling_quantile_VO$X35. & Vo(NDX)<rolling_quantile_VO$X45.,5,ifelse(Vo(NDX)>=rolling_quantile_VO$X45. & Vo(NDX)<rolling_quantile_VO$X55.,6,ifelse(Vo(NDX)>=rolling_quantile_VO$X55. & Vo(NDX)<rolling_quantile_VO$X65.,7,ifelse(Vo(NDX)>=rolling_quantile_VO$X65. & Vo(NDX)<rolling_quantile_VO$X75.,8,ifelse(Vo(NDX)>=rolling_quantile_VO$X75. & Vo(NDX)<rolling_quantile_VO$X85.,9,ifelse(Vo(NDX)>=rolling_quantile_VO$X85. & Vo(NDX)<rolling_quantile_VO$X95.,10,ifelse(Vo(NDX)>=rolling_quantile_VO$X95. & Vo(NDX)<rolling_quantile_VO$X99.,11,ifelse(Vo(NDX)>=rolling_quantile_VO$X99.,12,0))))))))))))
  #Plot
par(mfrow=c(2,2))
plot(VCUD["2016-1"])
plot(PCUD["2016-1"])
plot(PL["2016-1"])
plot(VL["2016-1"])
#Price and Volume change
q3<-na.omit(ROC(Cl(NDX)))
q2<-na.omit(Vo(NDX))
q1<-na.omit(Cl(NDX))
q4<-na.omit(ROC(Vo(NDX)))
rolling_quantile_CL<-rollapply(q1,width=50,FUN=function(y) quantile(y,c(0.01,0.05,0.15,0.25,0.35,0.45,0.55,0.65,0.75,0.85,0.95,0.99)),by.column = FALSE, align = "right")
rolling_quantile_VO<-rollapply(q2,width=50,FUN=function(y) quantile(y,c(0.01,0.05,0.15,0.25,0.35,0.45,0.55,0.65,0.75,0.85,0.95,0.99)),by.column = FALSE, align = "right")
rolling_quantile_CLR<-rollapply(q3,width=50,FUN=function(y) quantile(y,c(0.01,0.05,0.15,0.25,0.35,0.45,0.55,0.65,0.75,0.85,0.95,0.99)),by.column = FALSE, align = "right")
rolling_quantile_VOLR<-rollapply(q4,width=50,FUN=function(y) quantile(y,c(0.01,0.05,0.15,0.25,0.35,0.45,0.55,0.65,0.75,0.85,0.95,0.99)),by.column = FALSE, align = "right")
PU<-ifelse(ROC(Cl(NDX))>=0.0258,5,ifelse(ROC(Cl(NDX))>=0.021 & ROC(Cl(NDX))<0.0258,4,ifelse(ROC(Cl(NDX))>=0.012 & ROC(Cl(NDX))<0.021,3,ifelse(ROC(Cl(NDX))>=0.007 & ROC(Cl(NDX))<0.012,2,ifelse(ROC(Cl(NDX))>=0.002 & ROC(Cl(NDX))<0.007,1,0)))))
PD<-ifelse(ROC(Cl(NDX))<=(-0.0335),-5,ifelse(ROC(Cl(NDX))<=(-0.027) & ROC(Cl(NDX))>(-0.0335),-4,ifelse(ROC(Cl(NDX))<=(-0.014) & ROC(Cl(NDX))>(-0.027),-3,ifelse(ROC(Cl(NDX))<=(-0.005) & ROC(Cl(NDX))>(-0.014),-2,ifelse(ROC(Cl(NDX))<=(-0.0012) & ROC(Cl(NDX))>(-0.005),-1,0)))))
PCUD<-ifelse(ROC(Cl(NDX))>0,PU,PD)
VU<-ifelse(ROC(Vo(NDX))>=0.021,5,ifelse(ROC(Cl(NDX))>=0.01 & ROC(Cl(NDX))<0.02,4,ifelse(ROC(Cl(NDX))>=0.004 & ROC(Cl(NDX))<0.0075,2,ifelse(ROC(Cl(NDX))>=0.002 & ROC(Cl(NDX))<0.004,1,0))))
VD<-ifelse(ROC(Cl(NDX))<=(-0.028),-5,ifelse(ROC(Cl(NDX))<=(-0.016) & ROC(Cl(NDX))>(-0.028),-4,ifelse(ROC(Cl(NDX))<=(-0.01) & ROC(Cl(NDX))>(-0.016),-3,ifelse(ROC(Cl(NDX))<=(-0.005) & ROC(Cl(NDX))>(-0.01),-2,ifelse(ROC(Cl(NDX))<=(-0.0015) & ROC(Cl(NDX))>(-0.05),1,0)))))
VCUD<-ifelse(ROC(Cl(NDX))>0,VU,VD)
#Price and Volume
PL<-ifelse(Cl(NDX)>=rolling_quantile_CL$X1. & Cl(NDX)<rolling_quantile_CL$X5.,1,ifelse(Cl(NDX)>rolling_quantile_CL$X5. & Cl(NDX)<rolling_quantile_CL$X15.,2,ifelse(Cl(NDX)>=rolling_quantile_CL$X15. & Cl(NDX)<rolling_quantile_CL$X25.,3,ifelse(Cl(NDX)>=rolling_quantile_CL$X25. & Cl(NDX)<rolling_quantile_CL$X35.,4,ifelse(Cl(NDX)>=rolling_quantile_CL$X35. & Cl(NDX)<rolling_quantile_CL$X45.,5,ifelse(Cl(NDX)>=rolling_quantile_CL$X45. & Cl(NDX)<rolling_quantile_CL$X55.,6,ifelse(Cl(NDX)>=rolling_quantile_CL$X55. & Cl(NDX)<rolling_quantile_CL$X65.,7,ifelse(Cl(NDX)>=rolling_quantile_CL$X65. & Cl(NDX)<rolling_quantile_CL$X75.,8,ifelse(Cl(NDX)>=rolling_quantile_CL$X75. & Cl(NDX)<rolling_quantile_CL$X85.,9,ifelse(Cl(NDX)>=rolling_quantile_CL$X85. & Cl(NDX)<rolling_quantile_CL$X95.,10,ifelse(Cl(NDX)>=rolling_quantile_CL$X95. & Cl(NDX)<rolling_quantile_CL$X99.,11,ifelse(Cl(NDX)>=rolling_quantile_CL$X99.,12,0))))))))))))
VL<-ifelse(Vo(NDX)>=rolling_quantile_VO$X1. & Vo(NDX)<rolling_quantile_VO$X5.,1,ifelse(Vo(NDX)>rolling_quantile_VO$X5. & Vo(NDX)<rolling_quantile_VO$X15.,2,ifelse(Vo(NDX)>=rolling_quantile_VO$X15. & Vo(NDX)<rolling_quantile_VO$X25.,3,ifelse(Vo(NDX)>=rolling_quantile_VO$X25. & Vo(NDX)<rolling_quantile_VO$X35.,4,ifelse(Vo(NDX)>=rolling_quantile_VO$X35. & Vo(NDX)<rolling_quantile_VO$X45.,5,ifelse(Vo(NDX)>=rolling_quantile_VO$X45. & Vo(NDX)<rolling_quantile_VO$X55.,6,ifelse(Vo(NDX)>=rolling_quantile_VO$X55. & Vo(NDX)<rolling_quantile_VO$X65.,7,ifelse(Vo(NDX)>=rolling_quantile_VO$X65. & Vo(NDX)<rolling_quantile_VO$X75.,8,ifelse(Vo(NDX)>=rolling_quantile_VO$X75. & Vo(NDX)<rolling_quantile_VO$X85.,9,ifelse(Vo(NDX)>=rolling_quantile_VO$X85. & Vo(NDX)<rolling_quantile_VO$X95.,10,ifelse(Vo(NDX)>=rolling_quantile_VO$X95. & Vo(NDX)<rolling_quantile_VO$X99.,11,ifelse(Vo(NDX)>=rolling_quantile_VO$X99.,12,0))))))))))))
#Plot
par(mfrow=c(2,2))
plot(VCUD["2016-1"])
plot(PCUD["2016-1"])
plot(PL["2016-1"])
plot(VL["2016-1"])
#F2:Volatility
chaiVOL<-na.omit(chaikinVolatility(NDX[,2:3]))
atrVOL<-na.omit(ATR(NDX[,2:4])[,2])
vGK <- Cl(volatility(NDX[,1:4], calc="garman"))
stochOsc <- na.omit(stoch(NDX[,2:4]))
stochWPR<- na.omit(WPR(NDX[,2:4]))
q1=Cl(NDX)
rollSD<-rollapply(q1,width=50,FUN=function(y) stdev(y)/mean(y),by.column = FALSE, align = "right")
#plot
par(mfrow=c(2,3))
plot(chaiVOL["2016-01"])#cor(tail(Cl(NDX),10),tail(chaiVOL,10)) is -72%
plot(atrVOL["2016-01"])#cor(tail(Cl(NDX),10),tail(atrVOL,10)) is -71%
plot(vGK["2016-01"])#cor(tail(Cl(NDX),10),tail(vGK,10)) is 99%
plot(tail(stochOsc[,"fastK"], 100), type="l",main="Fast %K and Williams %R", ylab="",ylim=range(cbind(stochOsc, stochWPR), na.rm=TRUE) )
lines(tail(stochWPR, 100), col="blue")
lines(tail(1-stochWPR, 100), col="red", lty="dashed")
plot(rollSD["2016-01"])#cor(tail(Cl(NDX),10),tail(rollSD,10)) -63%
#INDEX RATIO PLOTS
plot(Cl(NDX)/Cl(GSPC))
plot(Cl(NDX)/Cl(OEX))
plot(Cl(GSPC)/Cl(OEX))
plot(Cl(TQQQ)/Cl(SQQQ))
plot(Cl(TLT)/Cl(SST))
plot(Cl(TLT)/Cl(EEM))
#INDEX
plot(Cl(DWTI))
plot(Cl(UWTI))
plot(Cl(TLT))
plot(Cl(`CAD=X`))
####HMM
##vGK
LogReturns <- log(Cl(NDX)) - log(Op(NDX)) #calculate the logarithmic returns
dataHMM<-na.omit(data.frame(LogReturns,vGK)) #create the data frame for our HMM model
colnames(dataHMM)<-c("LogReturns","Volatility") #name our columns 
set.seed(1)
HMM<-depmix(list(LogReturns~1,Volatility~1),data=dataHMM,nstates=3,family=list(gaussian(),gaussian())) #We’re setting the LogReturns and ATR as our response variables, using the data frame we just built, want to set 3 different regimes, and setting the response distributions to be gaussian. 
HMMfit<-fit(HMM, verbose = FALSE) #fit our model to the data set 
print(HMMfit) #we can compare the log Likelihood as well as the AIC and BIC values to help choose our model 
summary(HMMfit) 
HMMpost<-posterior(HMMfit) #find the posterior odds for each state over our data set
head(HMMpost) #we can see that we now have the probability for each state for everyday as well as the highest probability class. 
plot(HMMpost$state)
plot(HMMpost$S1)
plot(HMMpost$S2)
plot(HMMpost$S3)

##TQQQ/SQQQ ratio
  #No significant probablity to change state
dataHMM<-na.omit(data.frame(tail(LogReturns,1000),tail(Cl(TQQQ)/Cl(SQQQ),1000)))
colnames(dataHMM)<-c("LogReturns","TSratio") #name our columns 
set.seed(1)
HMM<-depmix(list(LogReturns~1,TSratio~1),data=dataHMM,nstates=3,family=list(gaussian(),gaussian())) 
HMMfit<-fit(HMM, verbose = FALSE)
print(HMMfit)
summary(HMMfit) 
HMMpost<-posterior(HMMfit)
head(HMMpost)
plot(HMMpost$state)

##NDX/GSPC ratio
  #No significant probablity to change state
dataHMM<-na.omit(data.frame(LogReturns,Cl(NDX)/Cl(GSPC)))
colnames(dataHMM)<-c("LogReturns","NGratio") #name our columns 
set.seed(1)
HMM<-depmix(list(LogReturns~1,NGratio~1),data=dataHMM,nstates=3,family=list(gaussian(),gaussian())) 
HMMfit<-fit(HMM, verbose = FALSE)
print(HMMfit)
summary(HMMfit) 
HMMpost<-posterior(HMMfit)
par(mfrow=c(2,3))
head(HMMpost)
plot(HMMpost$state)

##TltEem ratio
  #No significant probablity to change state
dataHMM<-na.omit(data.frame(LogReturns,Cl(TLT)/Cl(EEM)))
colnames(dataHMM)<-c("LogReturns","TltEem") #name our columns 
set.seed(1)
HMM<-depmix(list(LogReturns~1,TltEem~1),data=dataHMM,nstates=13,family=list(gaussian(),gaussian())) 
HMMfit<-fit(HMM, verbose = FALSE)
print(HMMfit)
summary(HMMfit) 
HMMpost<-posterior(HMMfit)
head(HMMpost)
par(mfrow=c(2,3))
plot(tail(HMMpost$state,100)
plot(tail(Cl(TLT)/Cl(EEM),100))
