install.packages("fGarch")
library(fGarch)
getSymbols("TATASTEEL.NS", from="1900-01-01")
rets = na.trim( ROC( Cl( TATASTEEL.NS) ) )
ss = rets["2009/2014"]
ss.v <- as.vector(ss)
 outOfSample = NROW(ss["2014"])
set.seed(123)
   fit = garchFit(~ garch(1, 1), data = ss, trace = FALSE)
   fit
plot(sqrt(252) * fit@sigma.t, type="l")  
predict(fit, n.ahead = 1)
predict(fit, n.ahead = 1, plot=TRUE, crit_val=2)
set.seed(321)
fit2 = garchFit(~ garch(1, 1), data = ss, trace = FALSE, cond.dist="sged")
predict(fit2,n.ahead=1,plot=TRUE)
set.seed(444)
 fit3 = garchFit(~ garch(1, 1), data = ss, trace = FALSE, cond.dist="QMLE")
p<-predict(fit3,n.ahead=1,plot=TRUE,conf=.9,nx=100) 

#if p[1,1] less than p[1,4] or greater than then buy or sell
************
****
getSymbols("TQQQ")
retTQQQ<-na.trim( ROC( Cl(TQQQ) ) )
#retTQQQ<-na.trim(diff(log(TQQQ)))
retTQQQ.v <- as.vector(retTQQQ)
#test<-retTQQQ["2011/2014"]
#train<-retTQQQ["2015"]
****
set.seed(123)
fit<-garchFit(~ garch(1, 1), data =retTQQQ, trace = FALSE)
summary(fit)
coef(fit)
predict(fit, n.ahead = 1, plot=TRUE, crit_val=2)
plot(sqrt(252) * fit@sigma.t, type="l")
***
install.packages("betategarch")
library("betategarch", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
gest.te <- tegarch.est(retTQQQ)
gest.te
gest.te$par
gfit.te <- tegarch.fit(retTQQQ, gest.te$par)
pp.timeplot(sqrt(252) * gfit.te[, "sigma"] * sd(gfit.te[,"epsilon"]))
Volatility  as estimated by a garch(1,1) model (blue) and by the beta-t EGARCH model (gold). 
****
library("bayesGARCH", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
gbayes <- bayesGARCH(retTQQQ.v)
gbayes
gbayes <- bayesGARCH(retTQQQ.v*100)#in percentage
The bayesGARCH function, though, doesnâ€™t give us an estimate.  It gives us a matrix with columns corresponding to the parameters and rows corresponding to the visits of a Markov Chain Monte Carlo. 
This is, sort of, a sample from the (posterior) distribution of the parameters.We can get a more useful analysis if we impose a constraint on the persistence.  
persistenceCons
function(psi)
    {
      psi[2] + psi[3] < .9986
    }
gbayes.con<- bayesGARCH(retTQQQ.v* 100,control=list(addPriorConditions=persistenceCons))  
gbayesChain<- gbayes.com$chain1[-1:-2500,][c(TRUE,FALSE),]
gbayesHalflife <- log(.5)/log(rowSums(gbayesChain[,c("alpha1", "beta")]))
****
library("tseries", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
gfit.ts <- garch(retTQQQ)
coef(gfit.ts)
plot(sqrt(252) * gfit.ts$fitted.values[, 1], type="l")# plot in-sample volatility estimates
****
library("rugarch")
library("rugarch", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
gspec.ru <- ugarchspec(mean.model=list(armaOrder=c(0,0)),distribution="std")
gfit.ru <- ugarchfit(gspec.ru,retTQQQ)
coef(gfit.ru)
plot(sqrt(252) * gfit.ru@fit$sigma, type='l')
class(gfit.ru)
str(gfit.ru)
coef(gfit.ru)
infocriteria(gfit.ru)
sigma(gfit.ru)
fitted(gfit.ru)
plot(fitted(gfit.ru))
plot(retTQQQ)
sp<-fitted(gfit.ru)-retTQQQ
plot(sp["2015"])
residuals(gfit.ru)
plot(residuals(gfit.ru)["2015-10/2015-11"])
VaR<-quantile(gfit.ru,0.01)#n-sample VaR
VaR<-gfit.ru@fit$sigma*qnorm(0.01)+gfit.ru@fit$fitted.values#n-sample VaR
#FORECASTING
model.ru<-ugarchforecast(gfit.ru, data = NULL, n.ahead =5, n.roll
= 0, out.sample = 0)
plot(model.ru)
slotNames(model.ru)
fitted(model.ru)
plot(model.ru@forecast$seriesFor)
##ROLLING
ug.roll.model<-ugarchspec (
variance.model = list(model = "sGARCH", garchOrder = c(1, 1)),
mean.model = list(armaOrder = c(0, 0)),
distribution.model = "norm")
ug.roll.modelfit<-ugarchfit(ug.roll.model,data=retTQQQ,out.sample=2)
ug.roll.modelfit@model$modeldata$T
ug.roll.modelfor<-ugarchforecast(ug.roll.modelfit, data = NULL, n.ahead = 1, n.roll= 2, out.sample = 2)
sigma(ug.roll.modelfor)
fitted(ug.roll.modelfor)
mu<-coef(ug.roll.modelfit)["mu"]
VaR<-quantile(ug.roll.modelfor,0.05)
## ROLLING WITH training data set


http://statistics.unl.edu/faculty/bilder/ts/r/garch_docum_example.r
http://finzi.psych.upenn.edu/library/fGarch/html/methods-predict.html
http://www.r-bloggers.com/a-practical-introduction-to-garch-modeling/
http://www.r-bloggers.com/variability-of-garch-predictions/
http://www.stat.nthu.edu.tw/~njhsu/Nonlinear%20Time%20Series/R%20functions%20for%20GARCH%20modeling.pdf
http://yunus.hacettepe.edu.tr/~iozkan/eco665/archgarch.html
http://faculty.washington.edu/ezivot/econ589/ch18-garch.pdf
http://statistics.unl.edu/faculty/bilder/ts/r/garch_docum_example.r
https://systematicinvestor.wordpress.com/2012/01/06/trading-using-garch-volatility-forecast/
https://www.quantstart.com/articles/ARIMA-GARCH-Trading-Strategy-on-the-SP500-Stock-Market-Index-Using-R
http://www.personal.psu.edu/asb17/old/sta4853/files/sta4853-28print.pdf
http://arxiv.org/pdf/1410.8504.pdf
http://eranraviv.com/volatility-forecast-evaluation-in-r/
http://maths-people.anu.edu.au/~johnm/courses/r/ASC2008/pdf/Rtimeseries-ohp.pdf
http://www.stat.ncu.edu.tw/teacher/wenteng/2010%20fall%20teaching/final%20project/Wei-Chih%20Chuang/garch.R
http://faculty.washington.edu/ezivot/econ589/econ589univariateGarch.r
http://www.portfolioprobe.com/2012/07/06/a-practical-introduction-to-garch-modeling/
http://www.reginafloresmir.com/statistics/
http://www.stat.pitt.edu/stoffer/tsa2/textRcode.htm
http://www.financialriskforecasting.com/code/3.html
https://gist.github.com/ivannp/5198580
http://people.orie.cornell.edu/davidr/SDAFE2/Rscripts/garch.R
